{"version":3,"file":"static/js/895.01ba9bbd.chunk.js","mappings":"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","sources":["components/views/Contacts/Contacts.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/views/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 100px;\n  padding: 20px;\n`;\n\nexport const TitleH1 = styled.h1`\n  margin-bottom: 8px;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 320px;\n  padding: 8px;\n  border: 1px solid rgb(95, 149, 183); ;\n`;\n\nexport const Input = styled.input`\n  position: relative;\n  font-size: 12px;\n  background: #ecf1f4;\n  border-radius: 4px;\n  line-height: 25px;\n  height: 25px;\n  width: 250px;\n  padding: 0 10px;\n  border: 1px solid #b6cfeb;\n  margin-bottom: 20px;\n  &:active {\n    box-shadow: rgb(95, 149, 183);\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 5px;\n  font-weight: 500;\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  &:hover {\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\n      rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\n  }\n  border-radius: 4px;\n  border-color: rgb(95, 149, 183);\n  &:active {\n    box-shadow: rgb(95, 149, 183) 0px 13px 27px -5px,\n      rgb(95, 149, 183) 0px 8px 16px -8px;\n    background-color: rgb(139, 173, 194);\n  }\n`;\n","import { useState } from 'react';\nimport {\n  useGetContactsQuery,\n  useAddContactsMutation,\n} from '../../Redux/сontactsApi';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\n\nexport default function ContactForm() {\n  const { data: contacts } = useGetContactsQuery();\n  const [addContact, { isLoading }] = useAddContactsMutation();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (contacts.find(contact => contact.name === name)) {\n      return alert(`${name} is already in your contacts list`);\n    }\n\n    addContact({ name: name, number: number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = evt => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>Name</Label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        placeholder=\"Enter name\"\n        onChange={handleChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <Label>Number</Label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        placeholder=\"Enter number\"\n        onChange={handleChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <Button type=\"submit\" disabled={isLoading}>\n        Add new contact\n      </Button>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 5px;\n  font-weight: 500;\n  font-size: 20px;\n  width: 250px;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  margin-top: 4px;\n  position: relative;\n  font-size: 12px;\n  background: #ecf1f4;\n  border-radius: 4px;\n  line-height: 25px;\n  height: 25px;\n  width: 250px;\n  padding: 0 10px;\n  border: 1px solid #b6cfeb;\n  margin-bottom: 20px;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filter, getFilter } from '../../Redux/contactsSlice';\nimport { Label, Input } from './Filter.styled';\n\nexport default function Filter() {\n  const { name } = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = event => {\n    dispatch(filter(event.target.value));\n  };\n\n  return (\n    <Label>\n      Find my contacts by name\n      <Input type=\"text\" name=\"filter\" value={name} onChange={handleFilter} />\n    </Label>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ItemLi = styled.li`\n  font-family: 'Roboto', sans-serif;\n  padding: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 16px;\n  font-weight: 500;\n  list-style: inside;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  &:hover {\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\n      rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\n  }\n  border-radius: 4px;\n  border-color: rgb(95, 149, 183);\n  &:active {\n    box-shadow: rgb(95, 149, 183) 0px 13px 27px -5px,\n      rgb(95, 149, 183) 0px 8px 16px -8px;\n    background-color: rgb(139, 173, 194);\n  }\n`;\n\nexport const Link = styled.a`\n  list-style: none;\n  font-style: italic;\n  font-size: large;\n  color: black;\n  &:hover {\n    background-color: #ebf1f3;\n    font-weight: 700;\n  }\n`;\nexport const Img = styled.img`\n  border-radius: 4px;\n  padding-right: 4px;\n  height: auto;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDeleteContactsMutation } from '../../Redux/сontactsApi';\nimport { ItemLi, Button, Link } from './ContactItem.styled';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactsMutation();\n\n  const onDeleteContact = id => {\n    deleteContact(id);\n  };\n  return (\n    <ItemLi key={id}>\n      <Link href=\"tel:{number}\">\n        {name}: {number}\n      </Link>\n      <Button\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n        disabled={isLoading}\n      >\n        Delete\n      </Button>\n    </ItemLi>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ListUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 0 15px;\n  width: 260px;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useGetContactsQuery } from '../../Redux/сontactsApi';\nimport { getFilter } from '../../Redux/contactsSlice';\nimport { ContactItem } from '../../components/ContactItem/ContactItem';\nimport { ListUl } from './ContactList.styled';\n\nexport default function ContactList() {\n  const { data: contacts, isSuccess } = useGetContactsQuery();\n\n  const filterContacts = useSelector(getFilter);\n\n  if (!isSuccess) {\n    return;\n  }\n\n  const getContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterContacts.toLocaleLowerCase())\n  );\n\n  return (\n    <ListUl>\n      {getContacts.map(({ id, name, phone }) => (\n        <ContactItem key={id} id={id} name={name} number={phone} />\n      ))}\n    </ListUl>\n  );\n}\n","import { Section, TitleH1 } from './Contacts.styled';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nexport default function Contacts() {\n  return (\n    <>\n      <Section className=\"b\">\n        <TitleH1>Phonebook</TitleH1>\n        <ContactForm />\n      </Section>\n      <Section>\n        <TitleH1>Contacts</TitleH1>\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n}\n"],"names":["Section","styled","TitleH1","Form","Input","Label","Button","ContactForm","contacts","useGetContactsQuery","data","useAddContactsMutation","addContact","isLoading","useState","name","setName","number","setNumber","reset","handleChange","evt","currentTarget","value","onSubmit","event","preventDefault","find","contact","alert","type","placeholder","onChange","pattern","title","required","disabled","Filter","useSelector","getFilter","dispatch","useDispatch","filter","target","ItemLi","Link","ContactItem","id","useDeleteContactsMutation","deleteContact","href","onClick","onDeleteContact","ListUl","ContactList","isSuccess","filterContacts","getContacts","toLowerCase","includes","toLocaleLowerCase","map","phone","Contacts","className"],"sourceRoot":""}